<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.capgemini.jtp.mapper.HrMapper">
    <resultMap id="BaseResultMap" type="com.capgemini.jtp.entity.Hr">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="telephone" property="telephone"/>
        <result column="address" property="address"/>
        <result column="enabled" property="enabled"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="userface" property="userface"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <resultMap id="lazyLoadRoles" type="com.capgemini.jtp.entity.Hr" extends="BaseResultMap">
        <collection property="roles" ofType="com.capgemini.jtp.entity.Role"
                    select="com.capgemini.jtp.mapper.HrMapper.getRolesByHrId"
                    column="id"></collection>
    </resultMap>

    <resultMap id="eagerLoadRoles" type="com.capgemini.jtp.entity.Hr" extends="BaseResultMap">
        <collection property="roles" ofType="com.capgemini.jtp.entity.Role">
            <id property="id" column="rid"/>
            <result property="name" column="rname"/>
            <result property="nameZh" column="rnameZh"/>
        </collection>
    </resultMap>

    <select id="loadUserByUsername" resultMap="lazyLoadRoles">
        select * from hr WHERE username=#{username};
    </select>

    <select id="getRolesByHrId" resultType="com.capgemini.jtp.entity.Role">
        SELECT r.* FROM hr_role h,role r where h.rid=r.id AND h.hrid=#{id}
    </select>

    <insert id="hrReg" parameterType="com.capgemini.jtp.vo.employee.request.HrEditVo">
        INSERT INTO hr set username=#{hrEdit.username,jdbcType=VARCHAR},
                           password=#{hrEdit.password,jdbcType=VARCHAR},
                           name=#{hrEdit.name,jdbcType=VARCHAR}
    </insert>

    <select id="getHrsByKeywords" resultMap="eagerLoadRoles">
        select h.*,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh` from ((`hr` `h` left join `hr_role`
        `h_r` on ((`h`.`id` = `h_r`.`hrid`))) left join `role` `r` on ((`h_r`.`rid` = `r`.`id`))) where h.`id` not
        in(select h_r.`hrid` from hr_role h_r,role r where h_r.`rid`=r.`id` and r.`nameZh`='系统管理员')
        <if test="keywords!='all' and keywords!=''">
            and h.`name` like concat('%',#{keywords},'%')
        </if>
        order by h.`id` limit 10
    </select>

    <select id="getHrById" resultMap="eagerLoadRoles">
        select h.*,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh` from ((`hr` `h` left join `hr_role`
        `h_r` on ((`h`.`id` = `h_r`.`hrid`))) left join `role` `r` on ((`h_r`.`rid` = `r`.`id`))) where h.`id`=#{hrId}
    </select>

    <update id="updateHr" parameterType="com.capgemini.jtp.entity.Hr">
        update hr
        <set>
            <if test="hr.name != null">
                name = #{hr.name,jdbcType=VARCHAR},
            </if>
            <if test="hr.username != null">
                username = #{hr.username,jdbcType=VARCHAR},
            </if>
            <if test="hr.password != null and hr.password !='' ">
                password = #{hr.password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{hr.id,jdbcType=BIGINT}
    </update>

    <delete id="deleteRoleByHrId" parameterType="Long">
        DELETE FROM hr_role where hrid=#{hrId}
    </delete>

    <insert id="addRolesForHr" parameterType="Long">
        INSERT INTO hr_role(hrid,rid) VALUES
        <foreach collection="rids" separator="," item="rid">
            (#{hrId},#{rid})
        </foreach>
    </insert>

    <delete id="deleteHr" parameterType="Long">
        DELETE FROM hr WHERE id=#{hrId}
    </delete>

    <select id="getAllHr" resultType="com.capgemini.jtp.entity.Hr">
        select * from hr
        <if test="currentId!=null">
            WHERE id !=#{currentId}
        </if>
    </select>

    <select id="getRoleByHrId" resultType="Long">
        select rid from hr_role WHERE hrid = #{id}
    </select>

    <select id="listAllHr" resultType="com.capgemini.jtp.vo.employee.response.HrVo">
        select id,name,username from hr
        <if test="search.id != null">
            where
            id = #{search.id,jdbcType=BIGINT}
        </if>
        <if test="search.start != null and search.size != null">
            order by id limit #{search.start},#{search.size}
        </if>
    </select>


    <select id="countHr" resultType="Long">
        select count(*) from hr
        <if test="search.id != null">
            where
            id = #{search.id,jdbcType=BIGINT}
        </if>
    </select>
</mapper>